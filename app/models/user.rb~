require 'digest/sha1'

class User < ActiveRecord::Base
  attr_accessible :course_id, :email, :hashed_password, :name, :year_of_passing,:password,:password_confirmation
  
  attr_accessor :password,:password_confirmation
  
  has_many :messages,:dependent => :destroy
  belongs_to :course
  has_many :comments, :as => :commentable
  has_many :events
  has_many :photos
  has_many :notes
  has_many :event_user_mappings
 has_many :events, :through => :event_user_mappings
 
  validates :name, :presence => true
  validates :email, :uniqueness => true, :presence => true, :format => /\A([^@\s]+)@((?:[-a-z0-9]+\.)+[a-z]{2,})\Z/i

  validates :password, :presence => true, :confirmation => true
  validates :password_confirmation, :presence => true
  
   def self.authenticate(email, password)
    user = find_by_email(email)
    if user
      if Digest::SHA1.hexdigest(password) == user.hashed_password # i.e. the password provided matches our record
        return user
      else # i.e. the password provided is incorrect
        return false
      end
    else # i.e. the user was not found with the provided email, hence we will return false
      return false
    end
  end

  before_save do
    unless password.blank?
      set_hashed_password
    end
  end
 
  
  private

  def set_hashed_password
    self.hashed_password = Digest::SHA1.hexdigest(password)
  end
end
